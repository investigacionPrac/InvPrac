name: GH Token rotation

on: 
  workflow_dispatch:
  #schedule:
  #  - cron: '0 1 * * 1' # Se ejecuta cada lunes a la 1:00 AM UTC es decir, 3:00 AM en verano y 2:00 AM en invierno (MIN (0-59), HORA (0-23), DIA DEL MES (1-31), MES (1-12), DIA DE LA SEMANA(0-6, siendo 0 el domingo y 6 el sábado))

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
   
  rotate-secret:
    runs-on: windows-latest
    name: Rotate Secret
    outputs:
      deploymentEnvironmentsJson: ${{ steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson }}

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ matrix.branch }}
          token: ${{ secrets.ghTokenWorkflow }}
      
      - name: Read settings
        uses: microsoft/AL-Go-Actions/ReadSettings@v7.2
        with:
          shell: ${{ matrix.shell }}
          get: type,powerPlatformSolutionFolder
      
      - name: Determine Deployment Environments
        id: DetermineDeploymentEnvironments
        uses: microsoft/AL-Go-Actions/DetermineDeploymentEnvironments@v7.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          getEnvironments: '*'
          type: 'CD'

      - name: Comprobar fecha y actualizar secrets de repositorio
        shell: powershell
        run: .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^gh-repo-pool-\d{3}$' -action 'Workflow' -metadataPath 'repo-secrets-metadata.json'

      - name: Comprobar fecha y actualizar secrets de organización
        shell: powershell
        run: .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^gh-org-pool-\d{3}$' -action 'StorageAccountDelivery' -metadataPath 'org-secrets-metadata.json'

      - name: Comprobar fecha y actualizar secrets de entorno (clientes)
        shell: powershell
        run: |
         .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^client.*_AUTHCONTEXT-pool-\d{3}$' -action 'environment' -metadataPath 'client-secrets-metadata.json' -secretName $env:SECRETTEST
         Write-Host '-------------------SecretName en el yaml:' $env:SECRETTEST
        env:
          ENVJSON: ${{steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson}}
          SECRETTEST: ${{secrets.TEST_AUTCONTEXT}}
          GITHUB_TOKEN: ${{github.token}}