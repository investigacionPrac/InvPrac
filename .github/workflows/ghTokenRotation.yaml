name: GH Token rotation

on: 
  workflow_dispatch:
  #schedule:
  #  - cron: '0 1 * * 1' # Se ejecuta cada lunes a la 1:00 AM UTC es decir, 3:00 AM en verano y 2:00 AM en invierno

env:
  workflowDepth: 1
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:

  Initialization:
    runs-on: windows-latest
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
      environmentsMatrixJson: ${{ steps.DetermineDeploymentEnvironments.outputs.EnvironmentsMatrixJson }}
      environmentCount: ${{ steps.DetermineDeploymentEnvironments.outputs.EnvironmentCount }}
      deploymentEnvironmentsJson: ${{ steps.DetermineDeploymentEnvironments.outputs.DeploymentEnvironmentsJson }}
      generateALDocArtifact: ${{ steps.DetermineDeploymentEnvironments.outputs.GenerateALDocArtifact }}
      deployALDocArtifact: ${{ steps.DetermineDeploymentEnvironments.outputs.DeployALDocArtifact }}
      deliveryTargetsJson: ${{ steps.DetermineDeliveryTargets.outputs.DeliveryTargetsJson }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
      githubRunnerShell: ${{ steps.ReadSettings.outputs.GitHubRunnerShell }}
      projects: ${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}
      skippedProjects: ${{ steps.determineProjectsToBuild.outputs.SkippedProjectsJson }}
      projectDependenciesJson: ${{ steps.determineProjectsToBuild.outputs.ProjectDependenciesJson }}
      buildOrderJson: ${{ steps.determineProjectsToBuild.outputs.BuildOrderJson }}
      baselineWorkflowRunId: ${{ steps.determineProjectsToBuild.outputs.BaselineWorkflowRunId }}
      baselineWorkflowSHA: ${{ steps.determineProjectsToBuild.outputs.BaselineWorkflowSHA }}
      workflowDepth: ${{ steps.DetermineWorkflowDepth.outputs.WorkflowDepth }}
    
    steps:
      - name: Read settings
        id: ReadSettings
        uses: microsoft/AL-Go-Actions/ReadSettings@v7.2
        with:
          shell: powershell
          get: type,powerPlatformSolutionFolder,useGitSubmodules

      - name: Read submodules token
        id: ReadSubmodulesToken
        if: env.useGitSubmodules != 'false' && env.useGitSubmodules != ''
        uses: microsoft/AL-Go-Actions/ReadSecrets@v7.2
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '-gitSubmodulesToken'

      - name: Checkout Submodules
        if: env.useGitSubmodules != 'false' && env.useGitSubmodules != ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          submodules: ${{ env.useGitSubmodules }}
          token: '${{ fromJson(steps.ReadSubmodulesToken.outputs.Secrets).gitSubmodulesToken }}'

      - name: Determine Workflow Depth
        id: DetermineWorkflowDepth
        run: |
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "WorkflowDepth=$($env:workflowDepth)"

      - name: Determine Projects To Build
        id: determineProjectsToBuild
        uses: microsoft/AL-Go-Actions/DetermineProjectsToBuild@v7.2
        with:
          shell: powershell
          maxBuildDepth: ${{ env.workflowDepth }}
      
      - name: Determine Delivery Target Secrets
        id: DetermineDeliveryTargetSecrets
        uses: microsoft/AL-Go-Actions/DetermineDeliveryTargets@v7.2
        with:
          shell: powershell
          projectsJson: '${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}'
          checkContextSecrets: 'false'

      - name: Read secrets
        id: ReadSecrets
        uses: microsoft/AL-Go-Actions/ReadSecrets@v7.2
        with:
          shell: powershell
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: ${{ steps.DetermineDeliveryTargetSecrets.outputs.ContextSecrets }}

      - name: Determine Deployment Environments
        id: DetermineDeploymentEnvironments
        uses: microsoft/AL-Go-Actions/DetermineDeploymentEnvironments@v7.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: powershell
          getEnvironments: '*'
          type: 'CD'

  rotate-secret:
    needs: Initialization
    runs-on: windows-latest
    name: Rotate Secret

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ matrix.branch }}
          token: ${{ secrets.ghTokenWorkflow }}

      - name: debug
        run: Write-Host $DetermineDeploymentEnvironments

      - name: Comprobar fecha y actualizar secrets de repositorio
        shell: powershell
        run: .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^gh-repo-pool-\d{3}$' -action 'Workflow' -metadataPath 'repo-secrets-metadata.json'

      - name: Comprobar fecha y actualizar secrets de organizaci√≥n
        shell: powershell
        run: .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^gh-org-pool-\d{3}$' -action 'StorageAccountDelivery' -metadataPath 'org-secrets-metadata.json'

      - name: Comprobar fecha y actualizar secrets de entorno (clientes)
        shell: powershell
        run: .github/scripts/ghtokenrotation.ps1 -keyvaultname $vaultName -matchPattern '^client.*_AUTHCONTEXT-pool-\d{3}$' -action 'environment' -metadataPath 'client-secrets-metadata.json'
